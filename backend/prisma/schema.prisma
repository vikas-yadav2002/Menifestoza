generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String?
  password    String
  description String?  // New optional field
  posts       Post[] 

  // Join table for many-to-many relationship
  followers   Follower[] @relation("UserFollowers")
  following   Follower[] @relation("UserFollowing")
  savedPost   Post[]    @relation("savedPost")
  likedPost   Post[] @relation("likedPost")
}

// Define a join table for followers
model Follower {
  id         String @id @default(uuid())
  followerId String
  followingId String

  follower   User @relation("UserFollowers", fields: [followerId], references: [id])
  following  User @relation("UserFollowing", fields: [followingId], references: [id])

  @@unique([followerId, followingId]) // Prevent duplicate follower-following pairs
}





model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   
  date      DateTime @default(now())
  likes     Int      @default(0) // Default to 0, you can increase this when a post is liked
  likedBy   User[]   @relation("likedPost") // Establish many-to-many relation with User
  savedBy  User[]   @relation("savedPost")
}